use std::{time::{SystemTime, UNIX_EPOCH}};
use rand::Rng;
use rand::seq::IndexedRandom;
use std::io;

fn main() {
    loop {
        start();
        println!("–ï—â—ë —Ä–∞–∑? Y/N");
        let mut input = String::new();
        io::stdin().read_line(&mut input).unwrap();
        match input.trim().to_uppercase().as_str() {
            "Y" => continue,
            "N" => {
            println!("–°–ø–∞—Å–∏–±–æ —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –¥–∞–Ω–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–æ–π!");
            break;
            },
        _ => println!("–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑"),
        }
    }

}


fn start(){
    println!("–ß–µ–º —Ö–æ—Ç–∏—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ–≥–æ–¥–Ω—è:
    1: –ò—Å–ø—ã—Ç–∞–Ω–∏–µ —É–¥–∞—á–∏,
    2: –ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä –¥–µ–≤—è—Ç–∫–∞.");
    let mut input = String::new();
    io::stdin().read_line(&mut input).unwrap();
    
    let value: i32 = input.trim().parse().unwrap_or_else(|_| {
        eprintln!("–û—à–∏–±–∫–∞! –ò—Å–ø–æ–ª—å–∑—É—é –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1");
        1
    });
    match value{
        1 => luck(),
        2 => magic_ball(),
        _ => println!("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç"),
    }
}



fn magic_ball() {
    println!("–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å –≤—Å–µ–ª–µ–Ω–Ω–æ–π!");
    
    let mut input = String::new();
    io::stdin().read_line(&mut input).unwrap();
    
    let scroll = [
        "–ë–µ—Å—Å–ø–æ—Ä–Ω–æ", "–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ", "–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π", "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞", "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º",
        "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è ‚Äî ¬´–¥–∞¬ª", "–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ", "–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã", "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç ‚Äî ¬´–¥–∞¬ª", "–î–∞",
        "–ü–æ–∫–∞ –Ω–µ —è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞", "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ", "–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å", "–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å", "–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å",
        "–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π", "–ú–æ–π –æ—Ç–≤–µ—Ç ‚Äî ¬´–Ω–µ—Ç¬ª", "–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º ‚Äî ¬´–Ω–µ—Ç¬ª", "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ", "–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ"
    ];
    
    let mut rng = rand::rng();
    let answer = scroll.choose(&mut rng).unwrap();
    
    println!("–¢–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤—Å–µ–ª–µ–Ω–Ω–æ–π: {}", input.trim());
    println!("–ò –≤—Å–µ–ª–µ–Ω–Ω–∞—è –æ—Ç–≤–µ—Ç–∏–ª–∞: {}", answer);
}

fn luck(){
    println!("–í–≤–µ–¥–∏—Ç–µ 0 –∏–ª–∏ 1:");
    let mut input = String::new();
    io::stdin().read_line(&mut input).unwrap();
    
    let value: i32 = input.trim().parse().unwrap_or_else(|_| {
        eprintln!("–û—à–∏–±–∫–∞! –ò—Å–ø–æ–ª—å–∑—É—é –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 1");
        1
    });
    let mut rng = rand::rng();
    let mut answer = 0;
    let since_epoch = SystemTime::now()
        .duration_since(UNIX_EPOCH)
        .unwrap() 
        .as_secs(); 
    for _ in 0..10000{
        let num = rng.random_range(1..since_epoch);
        match (num % 2, value) {
            (0, 1) => answer += 1,
            (1, 0) => answer += 1, 
            _ => ()  
        }
    };
match answer {
    0..=4850 => println!("‚ö° –ê–Ω–æ–º–∞–ª—å–Ω–∞—è –Ω–µ—É–¥–∞—á–∞ ({} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, {:.1}œÉ)", answer, (answer as f64 - 5000.0) / 50.0),
    4851..=4900 => println!("üî¥ –ë–æ–ª—å—à–∞—è –Ω–µ—É–¥–∞—á–∞ ({} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, {:.1}œÉ)", answer, (answer as f64 - 5000.0) / 50.0),
    4901..=4950 => println!("üî∂ –£–º–µ—Ä–µ–Ω–Ω–∞—è –Ω–µ—É–¥–∞—á–∞ ({} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, {:.1}œÉ)", answer, (answer as f64 - 5000.0) / 50.0),
    4951..=4999 => println!("‚úÖ –ú–∞–ª–∞—è –Ω–µ—É–¥–∞—á–∞ ({} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, ¬±1œÉ)", answer),
    5000 => println!("‚òØÔ∏è –ò–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å, —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ, {}", answer),
    5001..=5050 => println!("‚úÖ –ú–∞–ª–∞—è —É–¥–∞—á–∏ ({} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, ¬±1œÉ)", answer),
    5051..=5100 => println!("üî∑ –£–º–µ—Ä–µ–Ω–Ω–∞—è —É–¥–∞—á–∞({} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, +{:.1}œÉ)", answer, (answer as f64 - 5000.0) / 50.0),
    5101..=5150 => println!("üîµ –ë–æ–ª—å—à–∞—è —É–¥–∞—á–∞ ({} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, +{:.1}œÉ)", answer, (answer as f64 - 5000.0) / 50.0),
    5151..=10000 => println!("‚ö° –ê–Ω–æ–º–∞–ª—å–Ω–∞—è —É–¥–∞—á–∞ ({} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π, +{:.1}œÉ)", answer, (answer as f64 - 5000.0) / 50.0),
    _ => println!("‚ùì –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ({})", answer)
}}